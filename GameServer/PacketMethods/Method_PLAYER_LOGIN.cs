using GameServer.PacketRead;
using PangyaAPI.BinaryModels;
using PangyaAPI.Handles;
using PangyaAPI.Models;


namespace GameServer.PacketMethods
{
    internal class Method_PLAYER_LOGIN : HandleBase<Packet_PLAYER_LOGIN, Player>
    {
        public Method_PLAYER_LOGIN(Player connection) : base(connection)
        => Handle();

        private void Handle()
        {
            //Packet 1
            var packet = new PangyaBinaryWriter(new byte[] { 0x06, 0x00, 0x05, 0x00 });

            //versão do cliente
            //0x32, 0x2E, 0x31, 0x35, 0x62,
            packet.WriteStr("2.15a", 5);

            packet.Write(new byte[] {
                0xFF, 0x32, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 });


// 20bytes do nick 0x61, 0x68, 0x6E, 0x6C, 0x61, 0x62, 0x31, 0x30, 0x00, 0x00,0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00
            packet.WriteStr("Vitinho", 20);

            packet.Write(new byte[]{

                0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x43, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00,
                0x00, 0x12, 0x22, 0xF4, 0x40, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x32,
                0xB6, 0x42, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x7F, 0x7F,
                0x7F, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00 });

            //0x32, //lvl
            packet.Write((byte)40); //maximo é 50 o nivel
            //0x09, 0x00, 0x00, 0x09, //pangs
            packet.Write((int)93210);
            //0x09, 0x00, 0x00, 0x01, //cookies
            packet.Write((int)91234);

                packet.Write(new byte[] { 
                0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE8, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x80, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x04, 0x06, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x44, 0x00, 0x08, 0x00, 0x64, 0x00, 0x08, 0x00, 0x84, 0x00, 0x08, 0x00, 0xA4,
                0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE4, 0x00, 0x08, 0x00, 0x04, 0x01, 0x08,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x03, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xA1
            });
            Player.Send(packet);

            //packet envia menssagem global com o player que fez login
            var mglobal = new PangyaBinaryWriter(new byte[] { 0x04 });
            mglobal.WritePStr("Seja Bem Vindo! " + PacketResult.Username);
            Player.Send(mglobal);

            //packet que envia os canais
            var canais = new PangyaBinaryWriter(new byte[] { 0x11 });

            // 0x06, quantidade de canal            
            canais.Write((byte)3);

            //canal 1 VS - Normal
            //0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31,
            //0x31, 0x31, 0x31, 0x31, 0x31, 0x32, 0x31, 0x31, 0x32, 0x33, 0x32, 0x31, 0x32, 0x32,
            //0x32, 0x31, 0x31, 0x31, 0x32, 0x33, 0x32, 0x31, 0x32, 0x32, 0x31, 0x00, 0x00, 0x00,
            //0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            //0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
            canais.WriteStr("Canal Livre 1", 63);
            canais.Write(new byte[] { 0x00, 0xC8, 0x00, 0x00, 0x00});
            //0x00 numero do canal
            canais.Write((byte)0);
            // tipo do canal 0x01
            canais.Write((byte)1);
            canais.Write(new byte[] { 0x00, 0x00, 0x00 });

            //canal2 VS - Ladder 
            canais.WriteStr("Canal Ladder", 63);
            canais.Write(new byte[] { 0x00, 0xC8, 0x00, 0x00, 0x00});
            canais.Write((byte)1);
            canais.Write((byte)129);
            canais.Write(new byte[] { 0x00, 0x00, 0x00 });

            //canal1 Torneio
            canais.WriteStr("Torneio Livre 1", 63);
            canais.Write(new byte[] { 0x00, 0x90, 0x01, 0x00, 0x00 });
            canais.Write((byte)2);
            canais.Write((byte)2);
            canais.Write(new byte[] { 0x00, 0x00, 0x00 });

            Player.Send(canais);
        }
    }
}
