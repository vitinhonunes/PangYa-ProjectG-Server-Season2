using System;
using System.Drawing;
using System.Text;
using DevComponents.DotNetBar.Metro;
using System.Linq;
using Be.Windows.Forms;
using FastColoredTextBoxNS;
using DevComponents.DotNetBar;
using System.Windows.Forms;
using VisualStudio2012Style.PacketsEnum;
using SharpPcap.LibPcap;
using PcapSniffer;
using PacketDotNet;

namespace VisualStudio2012Style
{
    public partial class DarkThemeForm : MetroForm
    {
        #region Log Styles

        TextStyle infoStyle = new TextStyle(Brushes.Black, null, FontStyle.Regular);
        TextStyle warningStyle = new TextStyle(Brushes.BurlyWood, null, FontStyle.Regular);
        TextStyle errorStyle = new TextStyle(Brushes.Red, null, FontStyle.Regular);

        #endregion

        #region Private Fields

        private DynamicByteProvider byteProviderDecrypted;
        private DynamicByteProvider byteProviderCrypted;

        #endregion

        protected override void OnLoad(EventArgs e)
        {
            //key = 0x0D
            //var packet = GetPacket();

            //var tamanhoReal = BitConverter.ToInt16(new byte[] { packet[1], packet[2] }, 0);

            //var part1 = packet.Take(tamanhoReal + 4).ToArray();

            //var decrypted = Shared.Server.Cryptor.Decrypt(part1, 0x0d);

            //_packetsReceived.Add(GeneratePacket(decrypted));


            //NORMAL
            //var packets = new ToServerBuffer(0x0d).PutPacket(GetPacket());
            //foreach (var item in packets)
            //{
            //    _packetsReceived.Add(GeneratePacket(item));
            //}



            base.OnLoad(e);
        }

        //0x0D
        //private byte[] GetPacket()
        //{
        //    var result = new byte[] { 0x29, 0x0D, 0x02, 0x00, 0x5F, 0x06, 0x00, 0x04, 0xB3, 0x35, 0x2E, 0x34, 0x35, 0xCC, 0x4B, 0x42, 0x5C, 0x9C, 0x65, 0x72, 0x69, 0x63, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x45, 0x72, 0x69, 0x43, 0x24, 0x42, 0x69, 0x43, 0x61, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE8, 0x03, 0x00, 0x00, 0xE8, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE8, 0x03, 0x00, 0x00, 0xE8, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x04, 0x26, 0x00, 0x00, 0x04, 0x27, 0x04, 0x04, 0x08, 0x00, 0x20, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x00, 0x00, 0x84, 0x04, 0x08, 0x00, 0xC4, 0x04, 0x08, 0x00, 0x20, 0x00, 0x00, 0x00, 0xE4, 0x04, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x52, 0x00, 0x00, 0x00, 0x52, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xB3, 0x0B, 0x00, 0x00, 0xB3, 0x0B, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x52, 0x23, 0x07, 0x00, 0x00, 0x3B, 0x8C, 0x00, 0x00, 0x1B, 0x8C, 0x8C, 0xBE, 0x76, 0x00, 0x00, 0x79, 0x8B, 0x01, 0x00, 0xDC, 0x8B, 0x00, 0x00, 0x01, 0x04, 0x26, 0x00, 0x00, 0x04, 0x27, 0x04, 0x04, 0x08, 0x00, 0x20, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x00, 0x00, 0x84, 0x04, 0x08, 0x00, 0xC4, 0x04, 0x08, 0x00, 0x20, 0x00, 0x00, 0x00, 0xE4, 0x04, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x52, 0x00, 0x00, 0x00, 0x52, 0x00, 0x00, 0x5B, 0x84, 0x4F, 0x00, 0x00, 0x58, 0x8E, 0x03, 0x00, 0xC8, 0x8E, 0xB0, 0x0B, 0x03, 0x00, 0xB3, 0x0B, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xB4, 0x0B, 0x00, 0x01, 0xB4, 0x0B, 0x00, 0x14, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xB5, 0x0B, 0x00, 0x01, 0xB3, 0x0B, 0x00, 0x1A, 0x06, 0x00, 0x00, 0x1A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x18, 0xE1, 0x09, 0x00, 0x00, 0x09, 0x97, 0x00, 0x00, 0x6B, 0x97, 0x00, 0x00, 0x97, 0x6C, 0x4B, 0x00, 0x00, 0xED, 0x8D, 0x00, 0x00, 0xB1, 0x8D, 0x27, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0xD6, 0xBA, 0x01, 0x00, 0xFF, 0x11, 0x06, 0x46, 0x36, 0x74, 0x63, 0x66, 0x31, 0x0D, 0x04, 0x4E, 0x2D, 0x0D, 0x0D, 0x4E, 0x5F, 0x65, 0x6C, 0x20, 0x31, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC8, 0x00, 0x00, 0x00, 0xC8, 0x01, 0x00, 0x00, 0x00, 0x47, 0x72, 0x65, 0x65, 0x66, 0x31, 0x0D, 0x04, 0x4E, 0x2D, 0x0D, 0x0D, 0x4E, 0x5C, 0x65, 0x6C, 0x20, 0x32, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC8, 0x00, 0x00, 0x00, 0xC9, 0x01, 0x00, 0x00, 0x01, 0x55, 0x6F, 0x75, 0x72, 0x3A, 0x0E, 0x18, 0x17, 0x00, 0x15, 0x4D, 0x26, 0x06, 0x54, 0x11, 0x43, 0x68, 0x20, 0x31, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x90, 0x01, 0x00, 0x00, 0x92, 0x03, 0x00, 0x00, 0x02, 0x56, 0x6F, 0x75, 0x72, 0x3A, 0x0E, 0x18, 0x17, 0x00, 0x15, 0x4D, 0x26, 0x06, 0x54, 0x12, 0x43, 0x68, 0x20, 0x32, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x90, 0x01, 0x00, 0x00, 0x93, 0x03, 0x00, 0x00, 0x03, 0x56, 0x6F, 0x75, 0x72, 0x3A, 0x0E, 0x18, 0x17, 0x00, 0x15, 0x4D, 0x26, 0x06, 0x54, 0x13, 0x43, 0x68, 0x20, 0x33, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x90, 0x01, 0x00, 0x00, 0x94, 0x03, 0x00, 0x00, 0x04, 0x56, 0x6F, 0x75, 0x72, 0x3A, 0x0E, 0x18, 0x17, 0x00, 0x15, 0x4D, 0x26, 0x06, 0x54, 0x14, 0x43, 0x68, 0x20, 0x34, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x90, 0x01, 0x00, 0x00, 0x95, 0x03, 0x00, 0x00, 0x05, 0x85 };

        //    return result;
        //}

        ////0x08
        //private byte[] GetPacket2()
        //{
        //    return new byte[] { 0xBE, 0xEE, 0x00, 0x00, 0xCB, 0xFC, 0x03, 0x4E, 0x03, 0xB5, 0x42, 0x4E, 0x21, 0x69, 0x70, 0x00, 0x5E, 0x18, 0x1C, 0x30, 0x09, 0x18, 0x1C, 0x08, 0x03, 0x12, 0x03, 0x02, 0x0E, 0x04, 0x3B, 0x3A, 0x34, 0x36, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xEA, 0x4E, 0x00, 0x00, 0x3A, 0x49, 0x00, 0x00, 0xD0, 0x07, 0x00, 0x00, 0x31, 0x36, 0x37, 0x2E, 0x00, 0x07, 0x03, 0x00, 0x05, 0x1F, 0x04, 0x2E, 0x34, 0x2E, 0x30, 0x00, 0x28, 0xFF, 0xEA, 0x4E, 0x28, 0xFF, 0xEA, 0x4E, 0x00, 0x00, 0x43, 0x52, 0x41, 0x43, 0x16, 0x16, 0x0E, 0x43, 0x55, 0x74, 0x77, 0x2D, 0x30, 0x09, 0x18, 0x1C, 0x08, 0x03, 0x12, 0x03, 0x02, 0x0E, 0x04, 0x3B, 0x3A, 0x34, 0x36, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xEB, 0x4E, 0x00, 0x00, 0x3B, 0x49, 0x00, 0x00, 0xD0, 0x07, 0x00, 0x00, 0x31, 0x32, 0x37, 0x2E, 0x01, 0x1C, 0x07, 0x00, 0x01, 0x2E, 0x00, 0x2E, 0x31, 0x00, 0x30, 0x00, 0x28, 0xFF, 0xEB, 0x4E, 0x28, 0xFF, 0xEB, 0x4E, 0x00, 0x00, 0x53, 0x65, 0x61, 0x73, 0x3C, 0x0B, 0x41, 0x42, 0x6F, 0x5E, 0x18, 0x1C, 0x30, 0x09, 0x18, 0x1C, 0x08, 0x03, 0x12, 0x03, 0x02, 0x0E, 0x04, 0x3B, 0x3A, 0x34, 0x36, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xED, 0x4E, 0x00, 0x00, 0x3D, 0x49, 0x00, 0x00, 0xD0, 0x07, 0x00, 0x00, 0x31, 0x36, 0x37, 0x2E, 0x00, 0x07, 0x03, 0x00, 0x05, 0x1F, 0x04, 0x2E, 0x34, 0x2E, 0x30, 0x00, 0x28, 0xFF, 0xED, 0x4E, 0x28, 0xFF, 0xED, 0x4E, 0x00, 0x00, 0x91 };
        //}

        private DecryptedPacket GeneratePacket(byte[] data)
        {
            return new PcapSniffer.DecryptedPacket(DateTime.Now, PcapSniffer.ServiceType.LoginServer, null, 0, null, 0, true, data);
        }

        private void menu_edit_copyBytes_Click(object sender, EventArgs e)
        {
            var frm = new FrmCopyFormater(hexDecrypted);
            frm.ShowDialog();
        }

        private void DarkThemeForm_FormClosing(object sender, FormClosingEventArgs e)
        {
            try
            {
                Application.Exit();
            }
            catch { }
        }
    }
}